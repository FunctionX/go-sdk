syntax = "proto3";
package osmosis.poolmanager.v1beta1;

import "gogoproto/gogo.proto";

import "google/api/annotations.proto";
import "osmosis/poolmanager/v1beta1/swap_route.proto";

option go_package = "github.com/functionx/go-sdk/osmosis/poolmanager";

service Query {
  // Estimates swap amount out given in.
  rpc EstimateSwapExactAmountIn(EstimateSwapExactAmountInRequest)
      returns (EstimateSwapExactAmountInResponse) {}
}

//=============================== EstimateSwapExactAmountIn
message EstimateSwapExactAmountInRequest {
  string sender = 1 [ (gogoproto.moretags) = "yaml:\"sender\"" ];
  uint64 pool_id = 2 [ (gogoproto.moretags) = "yaml:\"pool_id\"" ];
  string token_in = 3 [ (gogoproto.moretags) = "yaml:\"token_in\"" ];
  repeated SwapAmountInRoute routes = 4 [
    (gogoproto.moretags) = "yaml:\"routes\"",
    (gogoproto.nullable) = false
  ];
}

message EstimateSwapExactAmountInResponse {
  string token_out_amount = 1 [
    (gogoproto.customtype) = "github.com/functionx/go-sdk/cosmos/types.Int",
    (gogoproto.moretags) = "yaml:\"token_out_amount\"",
    (gogoproto.nullable) = false
  ];
}